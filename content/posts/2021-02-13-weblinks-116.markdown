---
title: "–°—Å—ã–ª–∫–∏ #116"
date: 2021-02-13T10:37:31+0300
image: https://static.juev.org/images/links.jpg
tags: 
  - links
---
–ó–∞ –ø—Ä–æ—à–µ–¥—à—É—é –Ω–µ–¥–µ–ª—é —Å–æ—Ö—Ä–∞–Ω–∏–ª 65 —Å—Å—ã–ª–æ–∫.

* [Cloudflare Registrar](https://www.cloudflare.com/products/registrar/) -- Cloudflare –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∏ —Å–≤–æ–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–º–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω
* [From Homebrew to Home Manager](https://lucperkins.dev/blog/home-manager/) -- –ª–∏—á–Ω—ã–π –æ–ø—ã—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ —Å homebrew –Ω–∞ nix
* [uchess](https://github.com/tmountain/uchess) -- ‚ôõ‚ôî Play chess against UCI engines in your terminal
* [koekeishiya/yabai](https://github.com/koekeishiya/yabai) -- A tiling window manager for macOS based on binary space partitioning
* [go-json](https://github.com/goccy/go-json) -- Fast JSON encoder/decoder compatible with encoding/json for Go
* [State of the Common Lisp ecosystem, 2020 üéâ](https://lisp-journey.gitlab.io/blog/state-of-the-common-lisp-ecosystem-2020/) -- –æ–±–∑–æ—Ä SBCL –±–∏–±–ª–∏–æ—Ç–µ–∫ –Ω–∞ 2020
* ["Programming Algorithms in Lisp" Is Out!](http://lisp-univ-etc.blogspot.com/2021/02/programming-algorithms-in-lisp-is-out.html) -- –í—Å–µ–≤–æ–ª–æ–¥ –î–µ–º–∫–∏–Ω –ø—Ä–µ–∑–µ–Ω—Ç–æ–≤–∞–ª –≤—ã—Ö–æ–¥ —Å–≤–æ–µ–π –∫–Ω–∏–≥–∏ –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –Ω–∞ Lisp
* [A Lisp REPL as my main shell](https://ambrevar.xyz/lisp-repl-shell/index.html) -- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Lisp –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥–Ω–æ–π –æ–±–æ–ª–æ—á–∫–∏
* [Anti-patterns](https://quii.gitbook.io/learn-go-with-tests/meta/anti-patterns) -- –∏–∑—É—á–µ–Ω–∏–µ Golang —Å –ø–æ–º–æ—â—å—é —Ç–µ—Å—Ç–æ–≤
* [Telescope.nvim](https://github.com/nvim-telescope/telescope.nvim) -- Find, Filter, Preview, Pick. All lua, all the time. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –±–µ—Ç—ã nvim
* [How to teach Git](https://rachelcarmena.github.io/2018/12/12/how-to-teach-git.html) -- –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–∞–π—Ç –†–µ–π—á–µ–ª –ö–∞—Ä–º–µ–Ω—ã, –∏ –µ–µ —Å—Ç–∞—Ç—å—è –ø—Ä–æ –∏–∑—É—á–µ–Ω–∏–µ Git
* [ziglings](https://github.com/ratfactor/ziglings) -- Self-contained series of exercises for learning the Zig programming language
* [ocramz/xeno](https://github.com/ocramz/xeno) -- Fast Haskell XML parser
* [termhn/rayn](https://github.com/termhn/rayn) -- A small path tracing renderer written in Rust, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —Å –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
* [sol/doctest](https://github.com/sol/doctest) -- An implementation of Python's doctest for Haskell

–•–æ—Ä–æ—à–µ–π –≤–∞–º –Ω–µ–¥–µ–ª–∏!
